// <auto-generated />
using System;
using FBE.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FBE.Migrations
{
    [DbContext(typeof(FBEContext))]
    [Migration("20220427075511_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FBE.Models.Akademik_Kadro", b =>
                {
                    b.Property<int>("Sicil_No")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EABDBaskan")
                        .HasColumnType("bit");

                    b.Property<int?>("EABDIdEABD_Id")
                        .HasColumnType("int");

                    b.Property<string>("Kullanici_Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Soyad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Unvan_Id")
                        .HasColumnType("int");

                    b.HasKey("Sicil_No");

                    b.HasIndex("EABDIdEABD_Id");

                    b.HasIndex("Unvan_Id");

                    b.ToTable("Akademik_Kadro");
                });

            modelBuilder.Entity("FBE.Models.Announce", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsImportant")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleEng")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Announce");
                });

            modelBuilder.Entity("FBE.Models.AppRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("FBE.Models.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("FBE.Models.Basvuru_Kos_Tr", b =>
                {
                    b.Property<int>("Basvuru_Kos_Tr_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dil_Sart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Donem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GRE_Eski")
                        .HasColumnType("int");

                    b.Property<int>("GRE_Yeni")
                        .HasColumnType("int");

                    b.Property<string>("Kabul_Edilen_Program")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Kontenjan")
                        .HasColumnType("int");

                    b.Property<int>("Lisans_Ort")
                        .HasColumnType("int");

                    b.Property<int>("Min_Ales")
                        .HasColumnType("int");

                    b.Property<int>("Min_Dil_Puan")
                        .HasColumnType("int");

                    b.Property<string>("Ogretim_Yili")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProgramProg_Id")
                        .HasColumnType("int");

                    b.Property<int>("Yatay_Gec_Kontenjan")
                        .HasColumnType("int");

                    b.Property<int>("Yuksek_Lisans_Ort")
                        .HasColumnType("int");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Basvuru_Kos_Tr_Id");

                    b.HasIndex("ProgramProg_Id");

                    b.ToTable("Basvuru_Kos_Tr");
                });

            modelBuilder.Entity("FBE.Models.Basvuru_Kos_Yab", b =>
                {
                    b.Property<int>("Basvuru_Kos_Yab_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dil_Sart")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Donem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GRE_Eski")
                        .HasColumnType("int");

                    b.Property<int>("GRE_Yeni")
                        .HasColumnType("int");

                    b.Property<string>("Kabul_Edilen_Program")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Kontenjan")
                        .HasColumnType("int");

                    b.Property<int>("Lisans_Ort")
                        .HasColumnType("int");

                    b.Property<int>("Min_Ales")
                        .HasColumnType("int");

                    b.Property<int>("Min_Dil_Puan")
                        .HasColumnType("int");

                    b.Property<string>("Ogretim_Yili")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProgramProg_Id")
                        .HasColumnType("int");

                    b.Property<int>("Yatay_Gec_Kontenjan")
                        .HasColumnType("int");

                    b.Property<int>("Yuksek_Lisans_Ort")
                        .HasColumnType("int");

                    b.Property<bool>("isDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Basvuru_Kos_Yab_Id");

                    b.HasIndex("ProgramProg_Id");

                    b.ToTable("Basvuru_Kos_Yab");
                });

            modelBuilder.Entity("FBE.Models.Dersler", b =>
                {
                    b.Property<int>("Ders_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ders_Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ders_Ad_En")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Dil")
                        .HasColumnType("bit");

                    b.Property<int?>("ProgramProg_Id")
                        .HasColumnType("int");

                    b.Property<bool>("Seviye")
                        .HasColumnType("bit");

                    b.Property<bool>("Tur")
                        .HasColumnType("bit");

                    b.HasKey("Ders_Id");

                    b.HasIndex("ProgramProg_Id");

                    b.ToTable("Dersler");
                });

            modelBuilder.Entity("FBE.Models.EABD", b =>
                {
                    b.Property<int>("EABD_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EABD_Ad_En")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EABD_Ad_Tr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EABD_Id");

                    b.ToTable("EABD");
                });

            modelBuilder.Entity("FBE.Models.Ens_Gorevler", b =>
                {
                    b.Property<int>("EGorev_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EGorev_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EGorev_Id");

                    b.ToTable("Ens_Gorevler");
                });

            modelBuilder.Entity("FBE.Models.FileAnnouncement", b =>
                {
                    b.Property<int>("FileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FileTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PageId")
                        .HasColumnType("int");

                    b.HasKey("FileId");

                    b.HasIndex("PageId");

                    b.ToTable("AnnounceFiles");
                });

            modelBuilder.Entity("FBE.Models.FilePage", b =>
                {
                    b.Property<int>("FileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FileTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PageId")
                        .HasColumnType("int");

                    b.HasKey("FileId");

                    b.HasIndex("PageId");

                    b.ToTable("PageFiles");
                });

            modelBuilder.Entity("FBE.Models.Icons", b =>
                {
                    b.Property<int>("icon_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("iconName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("iconURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("icon_id");

                    b.ToTable("Icons");
                });

            modelBuilder.Entity("FBE.Models.Idari_Personel", b =>
                {
                    b.Property<int>("idari_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EGorev_Id")
                        .HasColumnType("int");

                    b.Property<int>("Sicil_No")
                        .HasColumnType("int");

                    b.Property<int>("Unvan_Id")
                        .HasColumnType("int");

                    b.Property<string>("ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("soyad")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idari_Id");

                    b.HasIndex("EGorev_Id");

                    b.HasIndex("Sicil_No");

                    b.HasIndex("Unvan_Id");

                    b.ToTable("Idari_Personel");
                });

            modelBuilder.Entity("FBE.Models.ImageAnnouncement", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnnounceId")
                        .HasColumnType("int");

                    b.Property<string>("ImageTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUniqueTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImageId");

                    b.HasIndex("AnnounceId");

                    b.ToTable("AnnounceImages");
                });

            modelBuilder.Entity("FBE.Models.ImagePage", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUniqueTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PageId")
                        .HasColumnType("int");

                    b.HasKey("ImageId");

                    b.HasIndex("PageId");

                    b.ToTable("PageImages");
                });

            modelBuilder.Entity("FBE.Models.ImageSlider", b =>
                {
                    b.Property<int>("ImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUniqueTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ImageId");

                    b.ToTable("SliderImages");
                });

            modelBuilder.Entity("FBE.Models.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("MenuChild")
                        .HasColumnType("int");

                    b.Property<bool>("MenuIsDeleted")
                        .HasColumnType("bit");

                    b.Property<int?>("MenuOrder")
                        .HasColumnType("int");

                    b.Property<bool>("MenuStatus")
                        .HasColumnType("bit");

                    b.Property<string>("MenuTarget")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuTitleEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MenuId");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("FBE.Models.Page", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionEng")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleEng")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pages");
                });

            modelBuilder.Entity("FBE.Models.Program_Detay", b =>
                {
                    b.Property<int>("PD_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProgramId")
                        .HasColumnType("int");

                    b.Property<string>("Program_Detay_")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Program_Detay_En")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PD_Id");

                    b.HasIndex("ProgramId");

                    b.ToTable("Program_Detay");
                });

            modelBuilder.Entity("FBE.Models.Program_Duzey", b =>
                {
                    b.Property<int>("Prog_Duzey_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Prog_Duzey")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Prog_Duzey_Id");

                    b.ToTable("Program_Duzey");
                });

            modelBuilder.Entity("FBE.Models.Programs", b =>
                {
                    b.Property<int>("Prog_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EABD_Id")
                        .HasColumnType("int");

                    b.Property<int?>("EbsId")
                        .HasColumnType("int");

                    b.Property<string>("Prog_Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prog_Ad_Ar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prog_Ad_En")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProgramDuzey")
                        .HasColumnType("int");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("Prog_Id");

                    b.HasIndex("EABD_Id");

                    b.HasIndex("ProgramDuzey");

                    b.ToTable("Programs");
                });

            modelBuilder.Entity("FBE.Models.Programs_Akademik_Kadro", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Akademik_KadroSicil_No")
                        .HasColumnType("int");

                    b.Property<bool>("Koordinator")
                        .HasColumnType("bit");

                    b.Property<int?>("ProgramProg_Id")
                        .HasColumnType("int");

                    b.Property<bool>("Yeterlilik_Kurulu")
                        .HasColumnType("bit");

                    b.Property<bool>("Yurutme_Kurulu")
                        .HasColumnType("bit");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("Akademik_KadroSicil_No");

                    b.HasIndex("ProgramProg_Id");

                    b.ToTable("ProgramAkademik_Kadro");
                });

            modelBuilder.Entity("FBE.Models.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Child")
                        .HasColumnType("int");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Target")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleEn")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Property");
                });

            modelBuilder.Entity("FBE.Models.Slider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Slider");
                });

            modelBuilder.Entity("FBE.Models.Slider2", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Slider2");
                });

            modelBuilder.Entity("FBE.Models.Unvan", b =>
                {
                    b.Property<int>("Unvan_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Unvan_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Unvan_Id");

                    b.ToTable("Unvan");
                });

            modelBuilder.Entity("FBE.Models.UsefulLink", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<bool>("Enable")
                        .HasColumnType("bit");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UsefulLink");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("FBE.Models.Akademik_Kadro", b =>
                {
                    b.HasOne("FBE.Models.EABD", "EABDId")
                        .WithMany()
                        .HasForeignKey("EABDIdEABD_Id");

                    b.HasOne("FBE.Models.Unvan", "Unvan")
                        .WithMany()
                        .HasForeignKey("Unvan_Id");

                    b.Navigation("EABDId");

                    b.Navigation("Unvan");
                });

            modelBuilder.Entity("FBE.Models.Basvuru_Kos_Tr", b =>
                {
                    b.HasOne("FBE.Models.Programs", "Program")
                        .WithMany()
                        .HasForeignKey("ProgramProg_Id");

                    b.Navigation("Program");
                });

            modelBuilder.Entity("FBE.Models.Basvuru_Kos_Yab", b =>
                {
                    b.HasOne("FBE.Models.Programs", "Program")
                        .WithMany()
                        .HasForeignKey("ProgramProg_Id");

                    b.Navigation("Program");
                });

            modelBuilder.Entity("FBE.Models.Dersler", b =>
                {
                    b.HasOne("FBE.Models.Programs", "Program")
                        .WithMany()
                        .HasForeignKey("ProgramProg_Id");

                    b.Navigation("Program");
                });

            modelBuilder.Entity("FBE.Models.FileAnnouncement", b =>
                {
                    b.HasOne("FBE.Models.Announce", "AnnounceFile")
                        .WithMany()
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnnounceFile");
                });

            modelBuilder.Entity("FBE.Models.FilePage", b =>
                {
                    b.HasOne("FBE.Models.Page", "FilesPage")
                        .WithMany("Files")
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FilesPage");
                });

            modelBuilder.Entity("FBE.Models.Idari_Personel", b =>
                {
                    b.HasOne("FBE.Models.Ens_Gorevler", "Ens_Gorevler")
                        .WithMany()
                        .HasForeignKey("EGorev_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FBE.Models.Akademik_Kadro", "Akademik_Kadro")
                        .WithMany()
                        .HasForeignKey("Sicil_No")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FBE.Models.Unvan", "Unvan")
                        .WithMany()
                        .HasForeignKey("Unvan_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Akademik_Kadro");

                    b.Navigation("Ens_Gorevler");

                    b.Navigation("Unvan");
                });

            modelBuilder.Entity("FBE.Models.ImageAnnouncement", b =>
                {
                    b.HasOne("FBE.Models.Announce", "AnnounceImage")
                        .WithMany()
                        .HasForeignKey("AnnounceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnnounceImage");
                });

            modelBuilder.Entity("FBE.Models.ImagePage", b =>
                {
                    b.HasOne("FBE.Models.Page", "ImagesPage")
                        .WithMany("Images")
                        .HasForeignKey("PageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ImagesPage");
                });

            modelBuilder.Entity("FBE.Models.Program_Detay", b =>
                {
                    b.HasOne("FBE.Models.Programs", "Program")
                        .WithMany("Program_Detay")
                        .HasForeignKey("ProgramId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Program");
                });

            modelBuilder.Entity("FBE.Models.Programs", b =>
                {
                    b.HasOne("FBE.Models.EABD", "EABD")
                        .WithMany()
                        .HasForeignKey("EABD_Id");

                    b.HasOne("FBE.Models.Program_Duzey", "Program_Duzey")
                        .WithMany()
                        .HasForeignKey("ProgramDuzey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EABD");

                    b.Navigation("Program_Duzey");
                });

            modelBuilder.Entity("FBE.Models.Programs_Akademik_Kadro", b =>
                {
                    b.HasOne("FBE.Models.Akademik_Kadro", "Akademik_Kadro")
                        .WithMany("Programs_Akademik_Kadro")
                        .HasForeignKey("Akademik_KadroSicil_No");

                    b.HasOne("FBE.Models.Programs", "Program")
                        .WithMany("Programs_Akademik_Kadro")
                        .HasForeignKey("ProgramProg_Id");

                    b.Navigation("Akademik_Kadro");

                    b.Navigation("Program");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("FBE.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("FBE.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("FBE.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("FBE.Models.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FBE.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("FBE.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("FBE.Models.Akademik_Kadro", b =>
                {
                    b.Navigation("Programs_Akademik_Kadro");
                });

            modelBuilder.Entity("FBE.Models.Page", b =>
                {
                    b.Navigation("Files");

                    b.Navigation("Images");
                });

            modelBuilder.Entity("FBE.Models.Programs", b =>
                {
                    b.Navigation("Program_Detay");

                    b.Navigation("Programs_Akademik_Kadro");
                });
#pragma warning restore 612, 618
        }
    }
}
